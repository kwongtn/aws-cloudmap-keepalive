name: Create and publish a Docker image to ghcr.io

on:
  push:
    branches:
      - "**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        goos:
          - linux
        goarch:
          - amd64
          - arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Build Go binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: "0"
        run: |
          go mod tidy
          go build -o main .

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image version prefix
        id: image_prefix
        run: |
          echo "prefix=$(echo ${{ github.ref_name }} | sed 's:/.*::')" >> "$GITHUB_OUTPUT"

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,enable=true,priority=100,prefix=,suffix=${{ matrix.goarch }},format=short
            type=raw,value=latest,suffix=${{ matrix.goarch }},enable={{is_default_branch}}

      - name: Build and push
        id: build-image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.goos }}/${{ matrix.goarch }}
          provenance: false
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}${{ !startsWith(steps.image_prefix.outputs.prefix, 'main') && format('-{0}', steps.image_prefix.outputs.prefix) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
